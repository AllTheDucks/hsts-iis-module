apply plugin: 'base'

ext {
	insecureManagerHash = 'eafe09d4eb48c4e0'
}

task candleWIX(type:Exec) {
	description 'Preprocesses and compiles WiX source files into object files.'
	dependsOn ":module:moduleSharedLibrary"

	FileTree src = fileTree(dir: 'src/main/wix')
	src.include '**/*.wxs'

	FileTree managerdlls
	if(project.hasProperty('managerHash')) {
		managerdlls = fileTree(dir: '../manager/build/signed')
	} else {
		dependsOn ":manager:compileCS"
		managerdlls = fileTree(dir: '../manager/build/bin')
	}
	managerdlls.include '**/*.dll'

	File out = file('build/wix/' + rootProject.name + '-' + rootProject.version + '.wixobj')

	inputs.files src + managerdlls
	outputs.files out

	executable file("${System.env.WIX}bin\\candle.exe")
	args '""-ext WixUtilExtension""'
	args '""-ext WixIisExtension""'
	args '""-arch x64""'
	args '""-out ' + out + '""'
	if(project.hasProperty('managerHash')) {
		args '""-dmanagerHash=' + project.managerHash + '""'
		args '""-dmanagerDllDir=manager/build/signed""'
	} else {
		args '""-dmanagerHash=' + project.ext.insecureManagerHash + '""'
		args '""-dmanagerDllDir=manager/build/bin""'
	}
	args src

}

task lightWIX(type:Exec) {
	description 'Links and binds one or more .wixobj files and creates a Windows Installer database.'
	dependsOn candleWIX

	FileCollection src = candleWIX.outputs.files
	File out = file('build/bin/' + rootProject.name + '-' + rootProject.version + '.msi')
	
	inputs.files src
	outputs.files out

    executable file("${System.env.WIX}bin\\light.exe")
	args '""-ext WixUtilExtension""'
	args '""-ext WixUIExtension""'
	args '""-ext WixIisExtension""'
	args '""-out ' + out + '""'
	args src
	
}

task buildInstaller {
	description 'Build the MSI installer.'
	dependsOn lightWIX
}